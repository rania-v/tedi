{"remainingRequest":"/home/rania/Επιφάνεια εργασίας/tedi/my-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/rania/Επιφάνεια εργασίας/tedi/my-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rania/Επιφάνεια εργασίας/tedi/my-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rania/Επιφάνεια εργασίας/tedi/my-app/src/components/create_ad.vue?vue&type=template&id=13e99366&","dependencies":[{"path":"/home/rania/Επιφάνεια εργασίας/tedi/my-app/src/components/create_ad.vue","mtime":1628783651798},{"path":"/home/rania/Επιφάνεια εργασίας/tedi/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rania/Επιφάνεια εργασίας/tedi/my-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/rania/Επιφάνεια εργασίας/tedi/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rania/Επιφάνεια εργασίας/tedi/my-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}